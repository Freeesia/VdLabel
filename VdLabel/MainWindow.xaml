<ui:FluentWindow
    x:Class="VdLabel.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cp="clr-namespace:ColorPicker;assembly=ColorPicker"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
    xmlns:local="clr-namespace:VdLabel"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:VdLabel.Properties"
    xmlns:tray="http://schemas.lepo.co/wpfui/2022/xaml/tray"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="VdLabel"
    Width="820"
    Height="680"
    d:DataContext="{d:DesignInstance {x:Type local:MainViewModel}}"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Activated="FluentWindow_Activated"
    Closing="FluentWindow_Closing"
    ExtendsContentIntoTitleBar="True"
    Loaded="FluentWindow_Loaded"
    WindowBackdropType="Mica"
    WindowCornerPreference="Default"
    mc:Ignorable="d">
    <ui:FluentWindow.Resources>
        <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="8" />
        </Style>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="4" />
            <Setter Property="MinWidth" Value="80" />
        </Style>
        <BooleanToVisibilityConverter x:Key="b2vConv" />
    </ui:FluentWindow.Resources>
    <Grid>
        <DockPanel>
            <ui:TitleBar
                Title="{Binding Title}"
                Height="32"
                DockPanel.Dock="Top"
                ShowMinimize="False">
                <ui:TitleBar.Icon>
                    <ui:ImageIcon Source="/app.ico" />
                </ui:TitleBar.Icon>
                <ui:TitleBar.TrailingContent>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsUpdatable, Converter={StaticResource b2vConv}}">
                        <ui:DropDownButton
                            Width="44"
                            Height="30"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Stretch"
                            Background="Goldenrod"
                            BorderThickness="0"
                            CornerRadius="0"
                            Icon="{ui:SymbolIcon MegaphoneLoud32}"
                            MouseOverBackground="Gold"
                            Style="{StaticResource DefaultUiButtonStyle}"
                            Visibility="{Binding HasUpdate, Converter={StaticResource b2vConv}}">
                            <ui:DropDownButton.ToolTip>
                                <ui:TextBlock Text="{Binding NewVersion, StringFormat={x:Static p:Resources.NewVersionAvailable}}" />
                            </ui:DropDownButton.ToolTip>
                            <ui:DropDownButton.Flyout>
                                <ContextMenu>
                                    <ui:MenuItem Command="{Binding InstallUpdateCommand}">
                                        <ui:MenuItem.Header>
                                            <ui:TextBlock Text="{Binding NewVersion, StringFormat={x:Static p:Resources.InstallNewVersion}}" />
                                        </ui:MenuItem.Header>
                                        <ui:MenuItem.Icon>
                                            <ui:SymbolIcon
                                                Filled="True"
                                                Foreground="LawnGreen"
                                                Symbol="PresenceAvailable24" />
                                        </ui:MenuItem.Icon>
                                    </ui:MenuItem>
                                    <ui:MenuItem
                                        Command="{Binding OpenReleaseNotesCommand}"
                                        Header="{x:Static p:Resources.CheckReleaseNotes}"
                                        Icon="{ui:SymbolIcon Globe24}" />
                                </ContextMenu>
                            </ui:DropDownButton.Flyout>
                        </ui:DropDownButton>
                        <ui:Button
                            Width="44"
                            Height="30"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Stretch"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding CheckUpdateCommand}"
                            CornerRadius="0"
                            Icon="{ui:SymbolIcon ArrowSync24}"
                            ToolTip="{x:Static p:Resources.CheckNewVersion}"
                            Visibility="{Binding HasUpdate, Converter={x:Static local:FalseToVisibilityConverter.Default}}" />
                    </StackPanel>
                </ui:TitleBar.TrailingContent>
            </ui:TitleBar>
            <tray:NotifyIcon DataContextChanged="NotifyIcon_DataContextChanged">
                <tray:NotifyIcon.Menu>
                    <ContextMenu>
                        <MenuItem Click="MenuItem_Click" Header="{x:Static p:Resources.Settings}" />
                        <MenuItem Command="{Binding ShowDesktopCagalogCommand}" Header="{x:Static p:Resources.DesktopList}" />
                        <MenuItem Click="MenuItem_Click_1" Header="{x:Static p:Resources.Exit}" />
                    </ContextMenu>
                </tray:NotifyIcon.Menu>
            </tray:NotifyIcon>
            <ProgressBar
                Height="4"
                DockPanel.Dock="Top"
                IsIndeterminate="{Binding IsBusy, Mode=OneWay}" />
            <DockPanel Margin="4,0" DockPanel.Dock="Bottom">
                <Button
                    Command="{Binding SaveCommand}"
                    Content="{x:Static p:Resources.Apply}"
                    DockPanel.Dock="Right" />
                <ui:Button
                    Command="{Binding ReloadDesktopsCommand}"
                    DockPanel.Dock="Left"
                    Icon="{ui:SymbolIcon ArrowCounterclockwise32}"
                    ToolTip="{x:Static p:Resources.RefreshDesktopList}" />
                <ui:ToggleSwitch
                    Margin="4"
                    Content="{x:Static p:Resources.AutoStartOnBoot}"
                    IsChecked="{Binding IsStartup, Mode=TwoWay}" />
            </DockPanel>
            <TabControl>
                <TabItem Header="{x:Static p:Resources.GeneralSettings}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label
                            Grid.Row="0"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.DisplayPosition}" />
                        <ComboBox
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="4"
                            ItemsSource="{Binding OverlayPositions, Mode=OneWay}"
                            SelectedItem="{Binding Config.Position, Mode=TwoWay}" />
                        <Label
                            Grid.Row="1"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.FontSize}" />
                        <ui:NumberBox
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="4"
                            Value="{Binding Config.FontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Label
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.DisplaySize}" />
                        <ui:NumberBox
                            Grid.Row="2"
                            Grid.Column="1"
                            Margin="4"
                            Value="{Binding Config.OverlaySize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Label
                            Grid.Row="3"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.BackgroundColor}" />
                        <cp:PortableColorPicker
                            Grid.Row="3"
                            Grid.Column="1"
                            Margin="4"
                            SelectedColor="{Binding Config.Background, Mode=TwoWay, Converter={x:Static local:SystemColorToMediaColorConverter.Default}}"
                            Style="{StaticResource DefaultColorPickerStyle}" />
                        <Label
                            Grid.Row="4"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.TextColor}" />
                        <cp:PortableColorPicker
                            Grid.Row="4"
                            Grid.Column="1"
                            Margin="4"
                            SelectedColor="{Binding Config.Foreground, Mode=TwoWay, Converter={x:Static local:SystemColorToMediaColorConverter.Default}}"
                            Style="{StaticResource DefaultColorPickerStyle}" />
                        <Label
                            Grid.Row="5"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.DisplayDuration}" />
                        <DockPanel
                            Grid.Row="5"
                            Grid.Column="1"
                            Margin="4">
                            <TextBlock
                                Margin="4"
                                VerticalAlignment="Center"
                                DockPanel.Dock="Right"
                                Text="{x:Static p:Resources.Seconds}" />
                            <ui:NumberBox Value="{Binding Config.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <Label
                            Grid.Row="6"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.NameDisplayPosition}" />
                        <ComboBox
                            Grid.Row="6"
                            Grid.Column="1"
                            Margin="4"
                            ItemsSource="{Binding NamePositions, Mode=OneWay}"
                            SelectedItem="{Binding Config.NamePosition, Mode=TwoWay}" />
                        <Label
                            Grid.Row="7"
                            Grid.Column="0"
                            Content="{x:Static p:Resources.CommandInterval}" />
                        <DockPanel
                            Grid.Row="7"
                            Grid.Column="1"
                            Margin="4">
                            <TextBlock
                                Margin="4"
                                VerticalAlignment="Center"
                                DockPanel.Dock="Right"
                                Text="{x:Static p:Resources.Seconds}" />
                            <ui:NumberBox Value="{Binding Config.CommandInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static p:Resources.DesktopSettings}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ui:ListView
                                x:Name="desktopListView"
                                Grid.Row="0"
                                Margin="4"
                                AllowDrop="{Binding IsSupportedMoveDesktop}"
                                ItemsSource="{Binding DesktopConfigs}"
                                SelectedItem="{Binding SelectedDesktopConfig}">
                                <ui:ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                                        <Setter Property="AllowDrop" Value="{Binding DataContext.IsSupportedMoveDesktop, RelativeSource={RelativeSource AncestorType=ui:ListView}}" />
                                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown" />
                                        <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListViewItem_PreviewMouseLeftButtonUp" />
                                        <EventSetter Event="Drop" Handler="ListViewItem_Drop" />
                                    </Style>
                                </ui:ListView.ItemContainerStyle>
                                <ui:ListView.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <Image
                                                Height="16"
                                                DockPanel.Dock="Left"
                                                Source="{Binding ImagePath}" />
                                            <emoji:TextBlock
                                                Margin="4,0"
                                                Text="{Binding Title}"
                                                TextTrimming="CharacterEllipsis" />
                                        </DockPanel>
                                    </DataTemplate>
                                </ui:ListView.ItemTemplate>
                            </ui:ListView>
                            <StackPanel
                                Grid.Row="1"
                                Margin="4"
                                Orientation="Horizontal">
                                <ui:Button
                                    Command="{Binding CreateDesktopCommand}"
                                    Content="{x:Static p:Resources.Add}"
                                    Icon="{ui:SymbolIcon Add24}" />
                                <ui:Button
                                    Margin="4,0,0,0"
                                    Command="{Binding RemoveDesktopCommand}"
                                    Content="{x:Static p:Resources.Remove}"
                                    Icon="{ui:SymbolIcon Delete24}" />
                            </StackPanel>
                        </Grid>
                        <GridSplitter Grid.Column="1" ResizeBehavior="PreviousAndNext" />
                        <ui:DynamicScrollViewer Grid.Column="2" DataContext="{Binding SelectedDesktopConfig}">
                            <Grid Margin="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Label
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Content="{x:Static p:Resources.ID}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <TextBox
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="4"
                                    IsReadOnly="True"
                                    Text="{Binding Id, Mode=OneWay}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <Label
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Content="{x:Static p:Resources.Name}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <ui:TextBox
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="4"
                                    PlaceholderText="{Binding Id, Mode=OneWay}"
                                    Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <Label
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Content="{x:Static p:Resources.NameCommand}"
                                    ToolTip="{x:Static p:Resources.NameCommandTooltip}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <DockPanel
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Margin="4"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}">
                                    <Button
                                        Command="{Binding TestCommandCommand}"
                                        Content="{x:Static p:Resources.Test}"
                                        DockPanel.Dock="Right" />
                                    <ui:TextBox Text="{Binding Command, UpdateSourceTrigger=PropertyChanged}" />
                                </DockPanel>
                                <CheckBox
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Margin="4"
                                    Content="{x:Static p:Resources.ReceiveCommandAsUtf8}"
                                    IsChecked="{Binding Utf8Command, Mode=TwoWay}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <ui:InfoBar
                                    Title="{x:Static p:Resources.Warning}"
                                    Grid.Row="4"
                                    Grid.Column="1"
                                    IsClosable="False"
                                    IsOpen="{Binding ShowNameWarning}"
                                    Message="{x:Static p:Resources.NameSyncNotSupported}"
                                    Severity="Warning"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <CheckBox
                                    Grid.Row="5"
                                    Grid.Column="1"
                                    Margin="4"
                                    Content="{x:Static p:Resources.ShowNameWhenImageSet}"
                                    IsChecked="{Binding IsVisibleName}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <Label
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Content="{x:Static p:Resources.SwitchNotificationImage}"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}" />
                                <DockPanel
                                    Grid.Row="6"
                                    Grid.Column="1"
                                    Margin="4"
                                    Visibility="{Binding IsNotPin, Converter={StaticResource b2vConv}}">
                                    <ui:Button
                                        Command="{Binding RemoveImageCommand}"
                                        DockPanel.Dock="Right"
                                        Icon="{ui:SymbolIcon Delete24}" />
                                    <Button
                                        Margin="4,0"
                                        Command="{Binding PickImageCommand}"
                                        Content="{x:Static p:Resources.Select}"
                                        DockPanel.Dock="Right" />
                                    <ui:TextBox
                                        IsReadOnly="True"
                                        PlaceholderText="{x:Static p:Resources.ImagePath}"
                                        Text="{Binding ImagePath}" />
                                </DockPanel>
                                <ui:Image
                                    Grid.Row="7"
                                    Grid.ColumnSpan="2"
                                    Height="120"
                                    CornerRadius="4"
                                    Source="{Binding ImagePath}"
                                    Visibility="{Binding IsVisibleImage, Converter={StaticResource b2vConv}}" />
                                <Label
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Content="{x:Static p:Resources.TargetWindow}" />
                                <Button
                                    Grid.Row="9"
                                    Grid.Column="0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Command="{Binding AddTargetWindowCommand}"
                                    Content="{x:Static p:Resources.Add}" />
                                <ItemsControl
                                    Grid.Row="8"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    VerticalAlignment="Top"
                                    ItemsSource="{Binding TargetWindows}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="local:WindowConfig">
                                            <Grid Margin="4,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="3*" />
                                                    <ColumnDefinition Width="2*" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ComboBox
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    ItemsSource="{Binding DataContext.MatchTypes, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                    SelectedItem="{Binding MatchType, Mode=TwoWay}" />
                                                <ComboBox
                                                    Grid.Row="0"
                                                    Grid.Column="1"
                                                    Margin="4,0"
                                                    ItemsSource="{Binding DataContext.PatternTypes, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                    SelectedItem="{Binding PatternType, Mode=TwoWay}" />
                                                <ui:Button
                                                    Grid.Row="0"
                                                    Grid.Column="2"
                                                    Command="{Binding DataContext.FindWindowCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                    CommandParameter="{Binding}"
                                                    Icon="{ui:SymbolIcon WindowLocationTarget20}" />
                                                <ui:Button
                                                    Grid.Row="0"
                                                    Grid.Column="3"
                                                    Margin="4,0"
                                                    Command="{Binding DataContext.RemoveTargetWindowCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                    CommandParameter="{Binding}"
                                                    Icon="{ui:SymbolIcon Delete24}" />
                                                <ui:TextBox
                                                    Grid.Row="1"
                                                    Grid.ColumnSpan="4"
                                                    Margin="0,4"
                                                    Text="{Binding Pattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </ui:DynamicScrollViewer>
                    </Grid>
                </TabItem>
            </TabControl>
        </DockPanel>
        <ContentPresenter x:Name="RootContentDialog" Grid.RowSpan="3" />
    </Grid>
</ui:FluentWindow>
